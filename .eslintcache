[{"C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\index.js":"1","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\App.js":"2","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\reportWebVitals.js":"3","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Person.js":"4","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Counter\\counter.js":"5","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Heading.js":"6","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Messenger\\Meesenger.js":"7","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\NotFound\\Notfound.js":"8","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Login\\Login.js":"9","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Signup\\Signup.js":"10","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Store\\store.js":"11"},{"size":633,"mtime":1609440411880,"results":"12","hashOfConfig":"13"},{"size":1394,"mtime":1609680991302,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":191,"mtime":1607888356205,"results":"16","hashOfConfig":"13"},{"size":1821,"mtime":1607977308502,"results":"17","hashOfConfig":"13"},{"size":247,"mtime":1607954076711,"results":"18","hashOfConfig":"13"},{"size":6552,"mtime":1619452120679,"results":"19","hashOfConfig":"13"},{"size":121,"mtime":1608907504565,"results":"20","hashOfConfig":"13"},{"size":3593,"mtime":1609768270910,"results":"21","hashOfConfig":"13"},{"size":5841,"mtime":1609767401109,"results":"22","hashOfConfig":"13"},{"size":661,"mtime":1613763331342,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ko0o7n",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\index.js",[],["54","55"],"C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\App.js",[],"C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\reportWebVitals.js",[],"C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Person.js",[],"C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Counter\\counter.js",["56","57"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Heading from './../Heading'\r\nimport { Col, Row,Button, Container, Badge } from 'react-bootstrap';\r\n\r\nclass counter extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            count:0\r\n        }\r\n        this.increment=this.increment.bind(this);\r\n        this.decrement=this.decrement.bind(this);\r\n    }\r\n\r\n    increment() {\r\n            this.setState({count:this.state.count+1,});\r\n        \r\n    }\r\n    decrement(){\r\n        this.setState({count:this.state.count-1,});\r\n    \r\n}   \r\ngetvariant(){\r\n    if (this.state.count>0)\r\n      return \"success\";\r\n    else if (this.state.count<0)\r\n            return\"danger\";\r\n    return \"warning\"\r\n}\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-5\">\r\n            <Row>\r\n                \r\n              <Col sm={4}>\r\n              <Button block variant=\"danger\" \r\n                onClick={\r\n                    \r\n                        this.decrement\r\n                        \r\n                }\r\n              >-</Button>\r\n              </Col>\r\n              <Col sm={4} className=\"d-flex align-items-center justify-content-center\">\r\n                <Badge\r\n                 variant={this.getvariant()}\r\n                style={{fontSize:\"20px\"}}\r\n                >{this.state.count==0 && \"zero\"}\r\n                {this.state.count!==0 && this.state.count}\r\n                </Badge> \r\n              </Col>\r\n              <Col sm={4}>\r\n              <Button \r\n              block\r\n               variant=\"primary\"\r\n                onClick={\r\n                    this.increment\r\n              }>+</Button>\r\n              </Col>\r\n            </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default counter;",["58","59"],"C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Heading.js",[],"C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Messenger\\Meesenger.js",["60","61","62","63","64","65","66","67","68","69"],"import React, {  useEffect, useState } from 'react'\r\nimport { Col, Container, Row ,Dropdown,DropdownButton} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport   \"./Messenger.css\";\r\nimport \"./fontawesome-free-5.15.1-web/css/all.css\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nexport function Meesenger (props) {\r\n    const[contacts,setContacts]=useState([]);\r\n    const showDropdown=false;\r\n    // constructor() {\r\n    //     super();\r\n    //     this.state = {\r\n    //         contacts:[],\r\n    //         showDropdown:false,\r\n            \r\n                \r\n    // }\r\n    // this.logout = this.logout.bind(this);\r\n    // }\r\n   useEffect(()=>{\r\n    fetch(\"https://ibm.co.ir/new/service/contacts.json\",{ \r\n        method: 'GET'\r\n      }).then(response =>response.json()).then(item =>{\r\n        setContacts(item)\r\n         });\r\n   },[]);\r\n    \r\n        \r\n\r\n            \r\n       function logout(e) {\r\n        e.preventDefault();\r\n        props.dispatch({type: \"LOGOUT\"});\r\n      }\r\n    \r\n        return (\r\n           \r\n           <Container>\r\n               \r\n               {props.user.login &&(\r\n               <Row>\r\n                   <Col lg={3} xs={12} md={3} className=\"side\">\r\n                        <div className=\"side-top\">\r\n                            <div className=\"side-top-right\">\r\n                           \r\n                       \r\n                             <Dropdown  alignRight  >\r\n                                 <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\" >\r\n\r\n                                        \r\n                                        <div className=\"side-top-dropdown\">\r\n                                         <div className=\"side-top-dropdown-img\"><img src=\"./assets/img/Messenger/img1.jpg\"></img></div>\r\n                                         <div className=\"side-top-dropdown-name\">{props.user.firstname} {props.user.lastname}</div> \r\n                                         </div>\r\n                                       \r\n                                </Dropdown.Toggle >\r\n\r\n                                <Dropdown.Menu>\r\n                                <Dropdown.Item href=\"#\" onClick={logout}>خروج</Dropdown.Item>\r\n                                \r\n                                 </Dropdown.Menu>\r\n                                </Dropdown>\r\n                                \r\n                             </div>\r\n                             \r\n                        </div>\r\n\r\n                        <div className=\"side-menu\">\r\n                            <div>\r\n                                <a href=\"#\">همه</a>\r\n                                <a href=\"#\">شخصي</a>\r\n                                <a href=\"#\">كانال</a>\r\n                                <a href=\"#\">گروه</a>\r\n                                <a href=\"#\">بازي</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"side-serach\">\r\n                            <input type=\"text\" placeholder=\"جست و جوي مخاطب\"></input>\r\n                        </div>\r\n                        <div className=\"side-peoplee\">\r\n                            \r\n                                {contacts.map(item => <div key={item.id} className=\"box\">\r\n                                    <div className=\"box-index\">\r\n                                     <div className=\"img\"><img src={item.img}></img></div>\r\n                                     <div className=\"mid-box\">\r\n                                         <span>{item.title}</span>\r\n                                         <br></br>\r\n                                         <span>{item.description}</span>\r\n                                     </div>\r\n                                     <div className=\"box-end\">\r\n                                         <span>{item.time}</span>\r\n                                         <span className='time-box'>{item.unread}</span>\r\n                                     </div>\r\n                                     </div>\r\n                                       </div>)}\r\n                            \r\n                        </div>\r\n                        <div className=\"side-footer\">\r\n                                 <div className=\"footer-icon icon2\">\r\n                                 <i className=\"fas fa-ellipsis-v\"></i>\r\n                            </div>\r\n                            <div className=\"footer-icon\">\r\n                                <i className=\"fas fa-desktop\"></i>\r\n                                <span>ويترين</span>\r\n                            </div>\r\n                            <div className=\"footer-icon\">\r\n                                <i className=\"far fa-comment-alt\"></i>\r\n                                <span>گفتگو</span>\r\n                            </div>\r\n                            \r\n                            \r\n                        </div>\r\n                    </Col>\r\n                    \r\n                    <Col lg={8} md={8} className=\"message\">\r\n                        <div className=\"message-top\">\r\n                            <div>\r\n                                 <img src=\"./assets/img/Messenger/img3.jfif\"></img>\r\n                                 <span>رضا پولادي</span>\r\n                            </div>\r\n                           \r\n                            <input type=\"text\" placeholder=\"search\"></input>\r\n                        </div>\r\n                        <div className=\"mesaage-text\">\r\n                            <p>\r\n                                lorem ipsum dolor sit amet lorem ipsum dolor sit amet\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"message-footer\">\r\n                            <span className=\"footer-span\">ر</span>\r\n                            <textarea name=\"\" id=\"\" cols=\"50\" rows=\"4\" placeholder=\"پيام خود را بنويسيد\"></textarea>\r\n\r\n                            <button class=\"btn btn-danger\" value=\"send\">ارسال</button>\r\n                        \r\n                        </div>\r\n                    </Col>\r\n               </Row>\r\n          )}\r\n          {!props.user.login && <Redirect to=\"/login\"/>}\r\n          </Container>\r\n        )\r\n    }\r\n\r\nconst mapStateToprops=state=>{\r\n    return{user:state.user}\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      dispatch\r\n    }\r\n  }\r\nexport default connect(mapStateToprops,mapDispatchToProps)(Meesenger)","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\NotFound\\Notfound.js",["70"],"function NotFound()\r\n{\r\n   return <div><img src=\"./assets/img/Messenger/404.jpg\"></img></div>\r\n}\r\nexport default NotFound","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Login\\Login.js",["71","72","73"],"import React, { Component, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Link, Redirect\r\n  } from \"react-router-dom\";\r\n  import { ToastContainer,toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n \r\nexport function Login (props){\r\n    const [mobile,setMobile]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const [login,setLogin]=useState(\"\");\r\n    // constructor(){\r\n    //     super();\r\n    //     \r\n    // }\r\n\r\n    function submitForm(e){\r\n        const form=e.target;\r\n        e.preventDefault();\r\n        fetch(\"https://ibm.co.ir/new/service/login.json\",{method:\"POST\",\r\n            body:new FormData(form)   \r\n        }).then(Response=>Response.json()).then(data=>{\r\n            toast.info(data.msg);\r\n            setLogin(true);\r\n            // props.onLogin(data);\r\n            props.dispatch({type:\"LOGIN\",playload:data})\r\n        })\r\n    }\r\n    function changeHandler(e){\r\n        let value=e.target.value;\r\n        let name=e.target.name;\r\n        switch (name){\r\n            case \"mobile\":\r\n            setMobile(value);\r\n            break;\r\n            case \"password\":\r\n            setPassword(value);\r\n        }\r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n        return  ( \r\n            <Container>\r\n                {props.login && <Redirect to=\"/\"/>}\r\n                {!props.login && (\r\n                    <>\r\n                    <ToastContainer position=\"top-right\" autoClose={2000}></ToastContainer>\r\n            <Form className=\"signup-form w-50 m-auto\" onSubmit={submitForm} >\r\n            \r\n               \r\n                <Form.Group >\r\n                    <Form.Label>شماره تلفن</Form.Label>\r\n                    <Form.Control\r\n                         required\r\n                         type=\"nuumber\"\r\n                         name=\"mobile\"\r\n                         placeholder=\"*******0912\" \r\n                         onChange={changeHandler}\r\n                         value={mobile}\r\n                         >\r\n                      </Form.Control>\r\n                </Form.Group>\r\n                \r\n\r\n                      <Form.Group>\r\n                    <Form.Label>پسورد</Form.Label>\r\n                    <Form.Control\r\n                         required\r\n                         type=\"password\"\r\n                         placeholder=\"*********\" \r\n                         name=\"password\"\r\n                         onChange={changeHandler}\r\n                         value={password}\r\n    \r\n                         >\r\n                      </Form.Control>\r\n                      </Form.Group>\r\n                      <Row >\r\n                          <Col xs={6}>\r\n                          <Button className=\"mt-4\" variant=\"danger\" size=\"lg\"  type=\"submit\" block>ورود</Button>\r\n                          </Col>\r\n                          <Col xs={6}>\r\n                          <Button className=\"mt-4\" as={Link} to=\"/signup\" variant=\"info\" size=\"lg\" block > ثبت نام</Button>\r\n                          </Col>\r\n                      </Row>\r\n                \r\n              \r\n             \r\n            </Form>\r\n                       </>                 )}\r\n        </Container>\r\n        )}\r\n    \r\nconst mapStateToprops=(state)=>{\r\n    return{\r\n        login:state.user.login\r\n    };\r\n};\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n       dispatch\r\n        // login:(firstname,lastname)=>{login(firstname,lastname)}\r\n    }\r\n}\r\nexport default connect(mapStateToprops,mapDispatchToProps)(Login)",["74","75"],"C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Signup\\Signup.js",["76","77"],"import React, { Component, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n  import { ToastContainer,toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction Signup(){\r\n    const[firstname,setFirstname]=useState(\"\");\r\n    const[password,setPassword]=useState(\"\");\r\n    const[lastname,setLastname]=useState(\"\");\r\n    const[mobile,setMobile]=useState(\"\");\r\n    const[email,setEmail]=useState(\"\");\r\n    // constructor(){\r\n    //     super();\r\n    //     this.state={\r\n    //         firsname:\"\",\r\n    //         lastname:'',\r\n    //         mobile:\"\",\r\n    //         email:\"\",\r\n\r\n    //     }\r\n    //     this.changeHandler=this.changeHandler.bind(this)\r\n    //     this.clearForm=this.clearForm.bind(this)\r\n    // }\r\n    \r\n//    function componentDidMount()\r\n//     {   ['firstname','lastname','mobile','email','password'].forEach(\r\n//         item=>{\r\n//             if(localStorage.getItem(item))\r\n//             this.setState({[item]:localStorage.getItem(item)});\r\n//         })\r\n//     }\r\n    function changeHandler(e){\r\n        let value=e.target.value;\r\n        let name=e.target.name;\r\n        switch (name){\r\n            case \"mobile\":\r\n            setMobile(value);\r\n            break;\r\n            case \"password\":\r\n            setPassword(value);\r\n            break;\r\n            case \"firstname\":\r\n            setFirstname(value);\r\n            break;\r\n            case \"lastname\":\r\n            setLastname(value);\r\n            break;\r\n            case \"email\":\r\n            setEmail(value);\r\n            break;\r\n        }\r\n    }\r\n\r\n    function clearForm(){\r\n        setFirstname();\r\n        setPassword();\r\n        setMobile();\r\n        setEmail();  \r\n        setLastname();        \r\n    }\r\n        // this.setState({\r\n        //     firsname:\"\",\r\n        //     lastname:'',\r\n        //     mobile:\"\",\r\n        //     email:\"\",\r\n        //     password:\"\"\r\n\r\n        // });\r\n        // ['firstname','lastname','mobile','email','password'].map(\r\n        //     item=>{\r\n        //         localStorage.setItem(item,\"\")\r\n        //     }\r\n        // )\r\n        function submitForm(e){\r\n            const form=e.target;\r\n            e.preventDefault();\r\n            fetch(\"https://ibm.co.ir/new/service/signup.json\",{method:\"POST\",\r\n                body:new FormData(form)   \r\n            }).then(Response=>Response.json()).then(data=>{\r\n                toast.info(data.msg);\r\n                // setLogin(true);\r\n                // props.onLogin(data);\r\n                \r\n            })\r\n        }\r\n   \r\n\r\n   \r\n    return (\r\n        <Container>\r\n              <ToastContainer position=\"top-right\" autoClose={5000} rtl={true}></ToastContainer>\r\n        <Form className=\"signup-form w-50 m-auto\" noValidate onSubmit={submitForm} >\r\n        <Form.Group >\r\n                <Form.Label>نام</Form.Label>\r\n                <Form.Control\r\n                     required\r\n                     type=\"text\"\r\n                     placeholder=\"نام \" \r\n                     name=\"firstname\"\r\n                     onChange={changeHandler}\r\n                     value={firstname}\r\n                     >\r\n                  </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group >\r\n                <Form.Label>نام خانوادگي</Form.Label>\r\n                <Form.Control\r\n                     required\r\n                     type=\"text\"\r\n                     name=\"lastname\"\r\n                     placeholder=\"نام خانوادگي\" \r\n                     onChange={changeHandler}\r\n                     value={lastname}\r\n                     >\r\n                  </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group >\r\n                <Form.Label>شماره تلفن</Form.Label>\r\n                <Form.Control\r\n                     required\r\n                     type=\"nuumber\"\r\n                     name=\"mobile\"\r\n                     placeholder=\"*******0912\" \r\n                     onChange={changeHandler}\r\n                     value={mobile}\r\n                     >\r\n                  </Form.Control>\r\n            </Form.Group>\r\n            \r\n              <Form.Group>\r\n                <Form.Label>ايميل</Form.Label>\r\n                <Form.Control\r\n                     required\r\n                     type=\"email\"\r\n                     placeholder=\"@\" \r\n                     name=\"email\"\r\n                     onChange={changeHandler}\r\n                     value={email}\r\n\r\n                     >\r\n                  </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                <Form.Label>پسورد</Form.Label>\r\n                <Form.Control\r\n                     required\r\n                     type=\"password\"\r\n                     placeholder=\"*********\" \r\n                     name=\"password\"\r\n                     onChange={changeHandler}\r\n                     value={password}\r\n\r\n                     >\r\n                  </Form.Control>\r\n                  </Form.Group>\r\n                  <Row className=\"col-button\">\r\n                          <Col xs={4}>\r\n                          <Button  variant=\"danger\" size=\"lg\"  type=\"submit\" block> ثبت نام</Button>\r\n                          </Col>\r\n                          <Col xs={4}>\r\n                          <Button  variant=\"secondary\" size=\"lg\"  type=\"reset\" onClick={clearForm} block>خالی کردن</Button> \r\n                            </Col>\r\n                            <Col xs={4}>\r\n                          <Button as={Link} to=\"/login\" variant=\"danger\" size=\"lg\"  block>ورود</Button>\r\n                          </Col>\r\n                      </Row>\r\n      \r\n           \r\n        </Form>\r\n    </Container>\r\n    )}\r\n    \r\nexport default Signup;","C:\\Users\\afagh\\Desktop\\new-react\\messenger\\src\\Components\\Store\\store.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":15},{"ruleId":"86","severity":1,"message":"87","line":52,"column":35,"nodeType":"88","messageId":"89","endLine":52,"endColumn":37},{"ruleId":"78","replacedBy":"90"},{"ruleId":"80","replacedBy":"91"},{"ruleId":"82","severity":1,"message":"92","line":2,"column":40,"nodeType":"84","messageId":"85","endLine":2,"endColumn":54},{"ruleId":"82","severity":1,"message":"93","line":12,"column":11,"nodeType":"84","messageId":"85","endLine":12,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":55,"column":81,"nodeType":"96","endLine":55,"endColumn":124},{"ruleId":"97","severity":1,"message":"98","line":73,"column":33,"nodeType":"96","endLine":73,"endColumn":45},{"ruleId":"97","severity":1,"message":"98","line":74,"column":33,"nodeType":"96","endLine":74,"endColumn":45},{"ruleId":"97","severity":1,"message":"98","line":75,"column":33,"nodeType":"96","endLine":75,"endColumn":45},{"ruleId":"97","severity":1,"message":"98","line":76,"column":33,"nodeType":"96","endLine":76,"endColumn":45},{"ruleId":"97","severity":1,"message":"98","line":77,"column":33,"nodeType":"96","endLine":77,"endColumn":45},{"ruleId":"94","severity":1,"message":"95","line":87,"column":59,"nodeType":"96","endLine":87,"endColumn":79},{"ruleId":"94","severity":1,"message":"95","line":121,"column":34,"nodeType":"96","endLine":121,"endColumn":78},{"ruleId":"94","severity":1,"message":"95","line":3,"column":16,"nodeType":"96","endLine":3,"endColumn":58},{"ruleId":"82","severity":1,"message":"99","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"100","line":13,"column":12,"nodeType":"84","messageId":"85","endLine":13,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":34,"column":9,"nodeType":"103","messageId":"104","endLine":40,"endColumn":10},{"ruleId":"78","replacedBy":"105"},{"ruleId":"80","replacedBy":"106"},{"ruleId":"82","severity":1,"message":"99","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"102","line":38,"column":9,"nodeType":"103","messageId":"104","endLine":54,"endColumn":10},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Heading' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["107"],["108"],"'DropdownButton' is defined but never used.","'showDropdown' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'login' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["107"],["108"],"no-global-assign","no-unsafe-negation"]